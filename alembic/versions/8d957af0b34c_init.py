"""Init

Revision ID: 8d957af0b34c
Revises: 
Create Date: 2024-01-11 00:05:42.462877

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8d957af0b34c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ts_keys',
    sa.Column('ts_key', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('ts_key')
    )
    op.create_table('users',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('user_id', 'created_by'),
    sa.UniqueConstraint('username')
    )
    op.create_table('device_profiles',
    sa.Column('profile_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('profile_id')
    )
    op.create_table('farms',
    sa.Column('farm_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('descriptions', sa.String(length=250), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('assigned_customer', sa.UUID(), nullable=True),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['assigned_customer'], ['users.user_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['owner_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('farm_id')
    )
    op.create_table('assets',
    sa.Column('asset_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=100), nullable=False),
    sa.Column('farm_id', sa.UUID(), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['farm_id'], ['farms.farm_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['owner_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('asset_id')
    )
    op.create_table('devices',
    sa.Column('device_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('label', sa.String(length=100), nullable=True),
    sa.Column('is_gateway', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('asset_id', sa.UUID(), nullable=False),
    sa.Column('device_profile_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.asset_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['device_profile_id'], ['device_profiles.profile_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('device_id')
    )
    op.create_table('key_usages',
    sa.Column('asset_id', sa.UUID(), nullable=True),
    sa.Column('ts_key', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.asset_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ts_key'], ['ts_keys.ts_key'], ondelete='CASCADE'),
    sa.UniqueConstraint('asset_id', 'ts_key')
    )
    op.create_table('thresholds',
    sa.Column('threshold_id', sa.UUID(), nullable=False),
    sa.Column('asset_id', sa.UUID(), nullable=False),
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('threshold_max', sa.Float(), nullable=True),
    sa.Column('threshold_min', sa.Float(), nullable=True),
    sa.Column('modified_by', sa.UUID(), nullable=False),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.asset_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['key'], ['ts_keys.ts_key'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['modified_by'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('threshold_id'),
    sa.UniqueConstraint('asset_id', 'key', name='uq_farm_key_pair')
    )
    op.create_table('ts_values',
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('ts_id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('device_id', sa.UUID(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['devices.device_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['key'], ['ts_keys.ts_key'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ts_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ts_values')
    op.drop_table('thresholds')
    op.drop_table('key_usages')
    op.drop_table('devices')
    op.drop_table('assets')
    op.drop_table('farms')
    op.drop_table('device_profiles')
    op.drop_table('users')
    op.drop_table('ts_keys')
    # ### end Alembic commands ###
